---
title: "Rendering documents"
---

You can render documents such as Quarto and R Markdown notebooks and publish the outputs with GitHub Pages.
Analysis notebooks, scheduled reports from external databases, and documentation
websites for software can all be published automatically with GHA & Pages.
Take a look at the example quarto document: `quarto-report/notebook.qmd`.

[{{< fa brands github >}}](https://github.com/kelly-sovacool/gh-actions-sandbox/tree/main/.github/workflows/render-quarto.yml)

```yaml
name: render quarto reports

on:
  workflow_dispatch:
  push: # <1>
    branches: main # <1>
    paths: # <1>
      - "quarto-report/**" # <1>
      - ".github/workflows/render-quarto.yml" # <1>

permissions: # <2>
  contents: write # <2>
  pages: write # <2>

jobs:
  render-quarto:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Quarto # <3>
        uses: quarto-dev/quarto-actions/setup@v2 # <3>

      - uses: r-lib/actions/setup-r@v2 # <4>
      - uses: r-lib/actions/setup-r-dependencies@v2 # <4>
        with: # <4>
          packages: | # <4>
            any::ggplot2 # <4>
            any::palmerpenguins # <4>
            any::rmarkdown # <4>

      - name: Run R script # <5>
        run: | # <5>
          print("Hello, world!") # <5>
        shell: Rscript {0} # <5>

      - name: Publish to GitHub Pages (and render) # <6>
        uses: quarto-dev/quarto-actions/publish@v2 # <6>
        with: # <6>
          target: gh-pages # <6>
          path: quarto-report/ # <6>
        env: # <7>
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # <7>
```
1. Run this workflow on pushes to main _only if_ files in `quarto-report/` are changed _or_ this workflow file changes.
2. Set the `permissions` to allow this workflow to write content to the repo and github pages. These permissions are disabled by default.
3. Install Quarto.
4. Install R and a few R packages.
5. You aren't limited to only bash in `run` steps. You can set `shell` to run other scripting languages too! `Rscript {0}` means the contents of `run` will be passed to `Rscript` at runtime.
6. Render the quarto project in `quarto-report`, push it to the `gh-pages` branch, and publish it to github pages.
7. Pass the default GitHub Token with elevated permissions to the quarto publish action, so it will be able to write content to the repo and github pages.

Before you can use this workflow, we'll need to first manually publish to GitHub Pages.

```sh
quarto publish gh-pages quarto-report/
```

The rendered report will be available at `https://USERNAME.github.io/REPO`.
After the initial publish, your GHA workflow will keep your website up to date.
